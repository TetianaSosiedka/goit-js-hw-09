{"version":3,"sources":["js/03-promises.js"],"names":["refs","form","document","querySelector","delay","step","amount","createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","arrPromis","Number","value","i","push","map","promis","then","console","log","catch"],"mappings":";AAAA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,0BAC9BE,KAAMH,SAASC,cAAc,yBAC7BG,OAAQJ,SAASC,cAAc,4BAyBjC,SAASI,EAAcC,EAAUJ,GACzBK,MAAAA,EAAgBC,KAAKC,SAAW,GAC/B,OAAA,IAAIC,QAAQ,CAACC,EAASC,KAC3BC,WAAW,KACLN,EACFI,EAAQ,CAAEL,SAAAA,EAAUJ,MAAAA,IAEpBU,EAAO,CAAEN,SAAAA,EAAUJ,MAAAA,KAEpBA,KA/BPJ,EAAKC,KAAKe,iBAAiB,SAAUC,IACnCA,EAAMC,iBAEAC,MAAAA,EAAY,GACdf,IAAAA,EAAQgB,OAAOpB,EAAKI,MAAMiB,OACxBhB,MAAAA,EAAOe,OAAOpB,EAAKK,KAAKgB,OAEzB,IAAA,IAAIC,EAAI,EAAGA,EAAItB,EAAKM,OAAOe,MAAOC,GAAK,EAC1CH,EAAUI,KAAKhB,EAAce,EAAI,EAAGlB,IACpCA,GAAgBC,EAElBc,EAAUK,IAAIC,IACZA,EACGC,KAAK,EAAGlB,SAAAA,EAAUJ,MAAAA,MACjBuB,QAAQC,2BAA2BpB,QAAeJ,SAEnDyB,MAAM,EAAGrB,SAAAA,EAAUJ,MAAAA,MAClBuB,QAAQC,0BAA0BpB,QAAeJ","file":"03-promises.6736245c.js","sourceRoot":"../src","sourcesContent":["const refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('.form [name = \"delay\"]'),\n  step: document.querySelector('.form [name = \"step\"]'),\n  amount: document.querySelector('.form [name = \"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const arrPromis = [];\n  let delay = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n\n  for (let i = 0; i < refs.amount.value; i += 1) {\n    arrPromis.push(createPromise(i + 1, delay));\n    delay = delay + step;\n  }\n  arrPromis.map(promis => {\n    promis\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  });\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"]}